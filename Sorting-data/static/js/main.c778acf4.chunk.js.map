{"version":3,"sources":["components/App/App.js","index.js"],"names":["App","state","list","id","name","model","year","sort","sortField","sortList","value","setState","a","b","aside","bside","this","keysFromList","map","el","Object","keys","setKeys","Set","convertToArray","key","onClick","toUpperCase","Component","render","document","getElementById"],"mappings":"gQAGaA,G,MAAb,2MACEC,MAAQ,CACNC,KAAM,CACJ,CAAEC,GAAI,EAAGC,KAAM,WAAYC,MAAO,aAAcC,KAAM,MACtD,CAAEH,GAAI,EAAGC,KAAM,SAAUC,MAAO,SAAUC,KAAM,MAChD,CAAEH,GAAI,EAAGC,KAAM,aAAcC,MAAO,QAASC,KAAM,MACnD,CAAEH,GAAI,EAAGC,KAAM,WAAYC,MAAO,YAAaC,KAAM,OAEvDC,KAAM,OACNC,UAAW,IATf,EAYEC,SAAW,SAACC,GACV,EAAKC,UAAS,gBAAGT,EAAH,EAAGA,KAAMK,EAAT,EAASA,KAAT,MAAqB,CACjCA,KAAe,WAATA,EAAe,SAAM,SAC3BC,UAAWE,EACXR,KAAMA,EAAKK,MAAK,SAACK,EAAGC,GAClB,IAAMC,EAAQF,EAAEF,GACVK,EAAQF,EAAEH,GAChB,MAAiB,WAATH,EAAiBO,EAAQC,EAAQ,GAAK,EAAMD,EAAQC,EAAQ,GAAK,UAnBjF,wEAwBY,IAAD,SAC2BC,KAAKf,MAA/BC,EADD,EACCA,KAAMK,EADP,EACOA,KAAMC,EADb,EACaA,UACdS,EAAef,EAAKgB,KAAI,SAAAC,GAAE,OAAIC,OAAOC,KAAKF,MAC1CG,EAAO,YAAOC,IAAP,YAAcN,IACrBO,EAAc,YAAOF,GAE3B,OACE,oCACE,6EACA,+BACE,+BACE,4BACIE,EAAeN,KAAI,SAAAd,GAAI,OACvB,wBAAIqB,IAAKrB,EAAMsB,QAAU,kBAAM,EAAKjB,SAASL,KACzCA,EAAKuB,cADT,IAC2BnB,IAAcJ,EAAOG,EAAO,WAK7D,+BACIL,EAAKgB,KAAI,gBAAGf,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,KAApB,OACT,wBAAImB,IAAMtB,GACR,4BAAMA,GACN,4BAAMC,GACN,4BAAMC,GACN,4BAAMC,cAjDtB,GAAyBsB,cCCzBC,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c778acf4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nexport class App extends Component {\n  state = {\n    list: [\n      { id: 1, name: 'Maserati', model: 'Ghibli 4.7', year: 1969 },\n      { id: 2, name: 'Jaguar', model: 'E-Type', year: 1961 },\n      { id: 3, name: 'Shelby 427', model: 'Cobra', year: 1966 },\n      { id: 4, name: 'Corvette', model: 'Sting Ray', year: 1963 },\n    ],\n    sort: 'none',\n    sortField: '',\n  };\n\n  sortList = (value) => {\n    this.setState(({ list, sort }) => ({\n      sort: sort === '⇓' ? '⇑' : '⇓',\n      sortField: value,\n      list: list.sort((a, b) => {\n        const aside = a[value];\n        const bside = b[value];\n        return (sort === '⇓') ? (aside < bside ? 1 : -1) : (aside > bside ? 1 : -1)\n      })\n    }));\n  };\n\n  render() {\n    const { list, sort, sortField } = this.state;\n    const keysFromList = list.map(el => Object.keys(el));\n    const setKeys = new Set(...keysFromList);\n    const convertToArray = [...setKeys];\n    \n    return (\n      <>\n        <h2>Click on the name of the column to sort table</h2>\n        <table>\n          <thead>\n            <tr>\n              { convertToArray.map(name => (\n                <th key={name} onClick={ () => this.sortList(name) }>\n                  { name.toUpperCase() } { sortField === name ? sort : null }\n                </th>\n              )) }\n            </tr>\n          </thead>\n          <tbody>\n            { list.map(({ id, name, model, year }) => (\n              <tr key={ id }>\n                <td>{ id }</td>\n                <td>{ name }</td>\n                <td>{ model }</td>\n                <td>{ year }</td>\n              </tr>\n            )) }\n          </tbody>\n        </table>\n      </>\n    );\n  };\n};","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './components/App/App';\n\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}